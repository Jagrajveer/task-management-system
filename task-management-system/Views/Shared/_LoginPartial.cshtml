@using Microsoft.AspNetCore.Identity
@using task_management_system.Data
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject ApplicationDbContext _Context

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @if (@Context.Request.Path != "/Notifications") {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-action="Index" asp-controller="Notification">
                @_Context.Notifications.Where(n => n.UserId == UserManager.GetUserAsync(User).Result.Id && !n.IsOpened).ToList().Count
            </a>
        </li>
    }
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
